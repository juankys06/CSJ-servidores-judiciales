/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package co.com.csj.model.impl;

import co.com.csj.model.permisos;
import co.com.csj.model.permisosModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the permisos service. Represents a row in the &quot;SJ_permiso_usuario&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link co.com.csj.model.permisosModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link permisosImpl}.
 * </p>
 *
 * @author villartech
 * @see permisosImpl
 * @see co.com.csj.model.permisos
 * @see co.com.csj.model.permisosModel
 * @generated
 */
public class permisosModelImpl extends BaseModelImpl<permisos>
	implements permisosModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a permisos model instance should use the {@link co.com.csj.model.permisos} interface instead.
	 */
	public static final String TABLE_NAME = "SJ_permiso_usuario";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "cargo", Types.VARCHAR },
			{ "departamento_municipio", Types.VARCHAR },
			{ "usuario", Types.VARCHAR },
			{ "fecha_creacion", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SJ_permiso_usuario (id LONG not null primary key IDENTITY,cargo VARCHAR(75) null,departamento_municipio VARCHAR(75) null,usuario VARCHAR(75) null,fecha_creacion DATE null)";
	public static final String TABLE_SQL_DROP = "drop table SJ_permiso_usuario";
	public static final String DATA_SOURCE = "base_despachos";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.co.com.csj.model.permisos"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.co.com.csj.model.permisos"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.co.com.csj.model.permisos"),
			true);
	public static long USUARIO_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.co.com.csj.model.permisos"));

	public permisosModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return permisos.class;
	}

	public String getModelClassName() {
		return permisos.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("cargo", getCargo());
		attributes.put("d_m", getD_m());
		attributes.put("usuario", getUsuario());
		attributes.put("creacion", getCreacion());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String cargo = (String)attributes.get("cargo");

		if (cargo != null) {
			setCargo(cargo);
		}

		String d_m = (String)attributes.get("d_m");

		if (d_m != null) {
			setD_m(d_m);
		}

		String usuario = (String)attributes.get("usuario");

		if (usuario != null) {
			setUsuario(usuario);
		}

		Date creacion = (Date)attributes.get("creacion");

		if (creacion != null) {
			setCreacion(creacion);
		}
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public String getCargo() {
		if (_cargo == null) {
			return StringPool.BLANK;
		}
		else {
			return _cargo;
		}
	}

	public void setCargo(String cargo) {
		_cargo = cargo;
	}

	public String getD_m() {
		if (_d_m == null) {
			return StringPool.BLANK;
		}
		else {
			return _d_m;
		}
	}

	public void setD_m(String d_m) {
		_d_m = d_m;
	}

	public String getUsuario() {
		if (_usuario == null) {
			return StringPool.BLANK;
		}
		else {
			return _usuario;
		}
	}

	public void setUsuario(String usuario) {
		_columnBitmask |= USUARIO_COLUMN_BITMASK;

		if (_originalUsuario == null) {
			_originalUsuario = _usuario;
		}

		_usuario = usuario;
	}

	public String getOriginalUsuario() {
		return GetterUtil.getString(_originalUsuario);
	}

	public Date getCreacion() {
		return _creacion;
	}

	public void setCreacion(Date creacion) {
		_creacion = creacion;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			permisos.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public permisos toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (permisos)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		permisosImpl permisosImpl = new permisosImpl();

		permisosImpl.setId(getId());
		permisosImpl.setCargo(getCargo());
		permisosImpl.setD_m(getD_m());
		permisosImpl.setUsuario(getUsuario());
		permisosImpl.setCreacion(getCreacion());

		permisosImpl.resetOriginalValues();

		return permisosImpl;
	}

	public int compareTo(permisos permisos) {
		long primaryKey = permisos.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		permisos permisos = null;

		try {
			permisos = (permisos)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = permisos.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		permisosModelImpl permisosModelImpl = this;

		permisosModelImpl._originalUsuario = permisosModelImpl._usuario;

		permisosModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<permisos> toCacheModel() {
		permisosCacheModel permisosCacheModel = new permisosCacheModel();

		permisosCacheModel.id = getId();

		permisosCacheModel.cargo = getCargo();

		String cargo = permisosCacheModel.cargo;

		if ((cargo != null) && (cargo.length() == 0)) {
			permisosCacheModel.cargo = null;
		}

		permisosCacheModel.d_m = getD_m();

		String d_m = permisosCacheModel.d_m;

		if ((d_m != null) && (d_m.length() == 0)) {
			permisosCacheModel.d_m = null;
		}

		permisosCacheModel.usuario = getUsuario();

		String usuario = permisosCacheModel.usuario;

		if ((usuario != null) && (usuario.length() == 0)) {
			permisosCacheModel.usuario = null;
		}

		Date creacion = getCreacion();

		if (creacion != null) {
			permisosCacheModel.creacion = creacion.getTime();
		}
		else {
			permisosCacheModel.creacion = Long.MIN_VALUE;
		}

		return permisosCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", cargo=");
		sb.append(getCargo());
		sb.append(", d_m=");
		sb.append(getD_m());
		sb.append(", usuario=");
		sb.append(getUsuario());
		sb.append(", creacion=");
		sb.append(getCreacion());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("co.com.csj.model.permisos");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cargo</column-name><column-value><![CDATA[");
		sb.append(getCargo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>d_m</column-name><column-value><![CDATA[");
		sb.append(getD_m());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuario</column-name><column-value><![CDATA[");
		sb.append(getUsuario());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creacion</column-name><column-value><![CDATA[");
		sb.append(getCreacion());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = permisos.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			permisos.class
		};
	private long _id;
	private String _cargo;
	private String _d_m;
	private String _usuario;
	private String _originalUsuario;
	private Date _creacion;
	private long _columnBitmask;
	private permisos _escapedModelProxy;
}