/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package co.com.csj.model.impl;

import co.com.csj.model.licencia_permiso;
import co.com.csj.model.licencia_permisoModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the licencia_permiso service. Represents a row in the &quot;SJ_licencia_permiso&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link co.com.csj.model.licencia_permisoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link licencia_permisoImpl}.
 * </p>
 *
 * @author villartech
 * @see licencia_permisoImpl
 * @see co.com.csj.model.licencia_permiso
 * @see co.com.csj.model.licencia_permisoModel
 * @generated
 */
public class licencia_permisoModelImpl extends BaseModelImpl<licencia_permiso>
	implements licencia_permisoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a licencia_permiso model instance should use the {@link co.com.csj.model.licencia_permiso} interface instead.
	 */
	public static final String TABLE_NAME = "SJ_licencia_permiso";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ID", Types.BIGINT },
			{ "fecha_inicio", Types.TIMESTAMP },
			{ "fecha_fin", Types.TIMESTAMP },
			{ "usuario_fk", Types.VARCHAR },
			{ "tipo_fk", Types.BIGINT },
			{ "acto_admin", Types.VARCHAR },
			{ "created_by", Types.BIGINT },
			{ "modified_by", Types.BIGINT },
			{ "estatus", Types.INTEGER },
			{ "despacho_fk", Types.VARCHAR },
			{ "cargo_fk", Types.INTEGER },
			{ "horas_permiso", Types.INTEGER },
			{ "minutos_permiso", Types.INTEGER },
			{ "fecha_registro", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SJ_licencia_permiso (ID LONG not null primary key IDENTITY,fecha_inicio DATE null,fecha_fin DATE null,usuario_fk VARCHAR(75) null,tipo_fk LONG,acto_admin VARCHAR(75) null,created_by LONG,modified_by LONG,estatus INTEGER,despacho_fk VARCHAR(75) null,cargo_fk INTEGER,horas_permiso INTEGER,minutos_permiso INTEGER,fecha_registro DATE null)";
	public static final String TABLE_SQL_DROP = "drop table SJ_licencia_permiso";
	public static final String ORDER_BY_JPQL = " ORDER BY licencia_permiso.id DESC";
	public static final String ORDER_BY_SQL = " ORDER BY SJ_licencia_permiso.ID DESC";
	public static final String DATA_SOURCE = "base_despachos";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.co.com.csj.model.licencia_permiso"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.co.com.csj.model.licencia_permiso"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.co.com.csj.model.licencia_permiso"),
			true);
	public static long CREADOPOR_COLUMN_BITMASK = 1L;
	public static long DESPACHO_COLUMN_BITMASK = 2L;
	public static long ESTATUS_COLUMN_BITMASK = 4L;
	public static long TIPOFK_COLUMN_BITMASK = 8L;
	public static long USUARIOFK_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.co.com.csj.model.licencia_permiso"));

	public licencia_permisoModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return licencia_permiso.class;
	}

	public String getModelClassName() {
		return licencia_permiso.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("fechainicio", getFechainicio());
		attributes.put("fechafin", getFechafin());
		attributes.put("usuariofk", getUsuariofk());
		attributes.put("tipofk", getTipofk());
		attributes.put("actoadmin", getActoadmin());
		attributes.put("creadoPor", getCreadoPor());
		attributes.put("modificadoPor", getModificadoPor());
		attributes.put("estatus", getEstatus());
		attributes.put("despacho", getDespacho());
		attributes.put("cargo", getCargo());
		attributes.put("horas", getHoras());
		attributes.put("minutos", getMinutos());
		attributes.put("fechaRegistro", getFechaRegistro());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Date fechainicio = (Date)attributes.get("fechainicio");

		if (fechainicio != null) {
			setFechainicio(fechainicio);
		}

		Date fechafin = (Date)attributes.get("fechafin");

		if (fechafin != null) {
			setFechafin(fechafin);
		}

		String usuariofk = (String)attributes.get("usuariofk");

		if (usuariofk != null) {
			setUsuariofk(usuariofk);
		}

		Long tipofk = (Long)attributes.get("tipofk");

		if (tipofk != null) {
			setTipofk(tipofk);
		}

		String actoadmin = (String)attributes.get("actoadmin");

		if (actoadmin != null) {
			setActoadmin(actoadmin);
		}

		Long creadoPor = (Long)attributes.get("creadoPor");

		if (creadoPor != null) {
			setCreadoPor(creadoPor);
		}

		Long modificadoPor = (Long)attributes.get("modificadoPor");

		if (modificadoPor != null) {
			setModificadoPor(modificadoPor);
		}

		Integer estatus = (Integer)attributes.get("estatus");

		if (estatus != null) {
			setEstatus(estatus);
		}

		String despacho = (String)attributes.get("despacho");

		if (despacho != null) {
			setDespacho(despacho);
		}

		Integer cargo = (Integer)attributes.get("cargo");

		if (cargo != null) {
			setCargo(cargo);
		}

		Integer horas = (Integer)attributes.get("horas");

		if (horas != null) {
			setHoras(horas);
		}

		Integer minutos = (Integer)attributes.get("minutos");

		if (minutos != null) {
			setMinutos(minutos);
		}

		Date fechaRegistro = (Date)attributes.get("fechaRegistro");

		if (fechaRegistro != null) {
			setFechaRegistro(fechaRegistro);
		}
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	public Date getFechainicio() {
		return _fechainicio;
	}

	public void setFechainicio(Date fechainicio) {
		_fechainicio = fechainicio;
	}

	public Date getFechafin() {
		return _fechafin;
	}

	public void setFechafin(Date fechafin) {
		_fechafin = fechafin;
	}

	public String getUsuariofk() {
		if (_usuariofk == null) {
			return StringPool.BLANK;
		}
		else {
			return _usuariofk;
		}
	}

	public void setUsuariofk(String usuariofk) {
		_columnBitmask |= USUARIOFK_COLUMN_BITMASK;

		if (_originalUsuariofk == null) {
			_originalUsuariofk = _usuariofk;
		}

		_usuariofk = usuariofk;
	}

	public String getOriginalUsuariofk() {
		return GetterUtil.getString(_originalUsuariofk);
	}

	public long getTipofk() {
		return _tipofk;
	}

	public void setTipofk(long tipofk) {
		_columnBitmask |= TIPOFK_COLUMN_BITMASK;

		if (!_setOriginalTipofk) {
			_setOriginalTipofk = true;

			_originalTipofk = _tipofk;
		}

		_tipofk = tipofk;
	}

	public long getOriginalTipofk() {
		return _originalTipofk;
	}

	public String getActoadmin() {
		if (_actoadmin == null) {
			return StringPool.BLANK;
		}
		else {
			return _actoadmin;
		}
	}

	public void setActoadmin(String actoadmin) {
		_actoadmin = actoadmin;
	}

	public long getCreadoPor() {
		return _creadoPor;
	}

	public void setCreadoPor(long creadoPor) {
		_columnBitmask |= CREADOPOR_COLUMN_BITMASK;

		if (!_setOriginalCreadoPor) {
			_setOriginalCreadoPor = true;

			_originalCreadoPor = _creadoPor;
		}

		_creadoPor = creadoPor;
	}

	public long getOriginalCreadoPor() {
		return _originalCreadoPor;
	}

	public long getModificadoPor() {
		return _modificadoPor;
	}

	public void setModificadoPor(long modificadoPor) {
		_modificadoPor = modificadoPor;
	}

	public int getEstatus() {
		return _estatus;
	}

	public void setEstatus(int estatus) {
		_columnBitmask |= ESTATUS_COLUMN_BITMASK;

		if (!_setOriginalEstatus) {
			_setOriginalEstatus = true;

			_originalEstatus = _estatus;
		}

		_estatus = estatus;
	}

	public int getOriginalEstatus() {
		return _originalEstatus;
	}

	public String getDespacho() {
		if (_despacho == null) {
			return StringPool.BLANK;
		}
		else {
			return _despacho;
		}
	}

	public void setDespacho(String despacho) {
		_columnBitmask |= DESPACHO_COLUMN_BITMASK;

		if (_originalDespacho == null) {
			_originalDespacho = _despacho;
		}

		_despacho = despacho;
	}

	public String getOriginalDespacho() {
		return GetterUtil.getString(_originalDespacho);
	}

	public int getCargo() {
		return _cargo;
	}

	public void setCargo(int cargo) {
		_cargo = cargo;
	}

	public int getHoras() {
		return _horas;
	}

	public void setHoras(int horas) {
		_horas = horas;
	}

	public int getMinutos() {
		return _minutos;
	}

	public void setMinutos(int minutos) {
		_minutos = minutos;
	}

	public Date getFechaRegistro() {
		return _fechaRegistro;
	}

	public void setFechaRegistro(Date fechaRegistro) {
		_fechaRegistro = fechaRegistro;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			licencia_permiso.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public licencia_permiso toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (licencia_permiso)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		licencia_permisoImpl licencia_permisoImpl = new licencia_permisoImpl();

		licencia_permisoImpl.setId(getId());
		licencia_permisoImpl.setFechainicio(getFechainicio());
		licencia_permisoImpl.setFechafin(getFechafin());
		licencia_permisoImpl.setUsuariofk(getUsuariofk());
		licencia_permisoImpl.setTipofk(getTipofk());
		licencia_permisoImpl.setActoadmin(getActoadmin());
		licencia_permisoImpl.setCreadoPor(getCreadoPor());
		licencia_permisoImpl.setModificadoPor(getModificadoPor());
		licencia_permisoImpl.setEstatus(getEstatus());
		licencia_permisoImpl.setDespacho(getDespacho());
		licencia_permisoImpl.setCargo(getCargo());
		licencia_permisoImpl.setHoras(getHoras());
		licencia_permisoImpl.setMinutos(getMinutos());
		licencia_permisoImpl.setFechaRegistro(getFechaRegistro());

		licencia_permisoImpl.resetOriginalValues();

		return licencia_permisoImpl;
	}

	public int compareTo(licencia_permiso licencia_permiso) {
		int value = 0;

		if (getId() < licencia_permiso.getId()) {
			value = -1;
		}
		else if (getId() > licencia_permiso.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		licencia_permiso licencia_permiso = null;

		try {
			licencia_permiso = (licencia_permiso)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = licencia_permiso.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		licencia_permisoModelImpl licencia_permisoModelImpl = this;

		licencia_permisoModelImpl._originalUsuariofk = licencia_permisoModelImpl._usuariofk;

		licencia_permisoModelImpl._originalTipofk = licencia_permisoModelImpl._tipofk;

		licencia_permisoModelImpl._setOriginalTipofk = false;

		licencia_permisoModelImpl._originalCreadoPor = licencia_permisoModelImpl._creadoPor;

		licencia_permisoModelImpl._setOriginalCreadoPor = false;

		licencia_permisoModelImpl._originalEstatus = licencia_permisoModelImpl._estatus;

		licencia_permisoModelImpl._setOriginalEstatus = false;

		licencia_permisoModelImpl._originalDespacho = licencia_permisoModelImpl._despacho;

		licencia_permisoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<licencia_permiso> toCacheModel() {
		licencia_permisoCacheModel licencia_permisoCacheModel = new licencia_permisoCacheModel();

		licencia_permisoCacheModel.id = getId();

		Date fechainicio = getFechainicio();

		if (fechainicio != null) {
			licencia_permisoCacheModel.fechainicio = fechainicio.getTime();
		}
		else {
			licencia_permisoCacheModel.fechainicio = Long.MIN_VALUE;
		}

		Date fechafin = getFechafin();

		if (fechafin != null) {
			licencia_permisoCacheModel.fechafin = fechafin.getTime();
		}
		else {
			licencia_permisoCacheModel.fechafin = Long.MIN_VALUE;
		}

		licencia_permisoCacheModel.usuariofk = getUsuariofk();

		String usuariofk = licencia_permisoCacheModel.usuariofk;

		if ((usuariofk != null) && (usuariofk.length() == 0)) {
			licencia_permisoCacheModel.usuariofk = null;
		}

		licencia_permisoCacheModel.tipofk = getTipofk();

		licencia_permisoCacheModel.actoadmin = getActoadmin();

		String actoadmin = licencia_permisoCacheModel.actoadmin;

		if ((actoadmin != null) && (actoadmin.length() == 0)) {
			licencia_permisoCacheModel.actoadmin = null;
		}

		licencia_permisoCacheModel.creadoPor = getCreadoPor();

		licencia_permisoCacheModel.modificadoPor = getModificadoPor();

		licencia_permisoCacheModel.estatus = getEstatus();

		licencia_permisoCacheModel.despacho = getDespacho();

		String despacho = licencia_permisoCacheModel.despacho;

		if ((despacho != null) && (despacho.length() == 0)) {
			licencia_permisoCacheModel.despacho = null;
		}

		licencia_permisoCacheModel.cargo = getCargo();

		licencia_permisoCacheModel.horas = getHoras();

		licencia_permisoCacheModel.minutos = getMinutos();

		Date fechaRegistro = getFechaRegistro();

		if (fechaRegistro != null) {
			licencia_permisoCacheModel.fechaRegistro = fechaRegistro.getTime();
		}
		else {
			licencia_permisoCacheModel.fechaRegistro = Long.MIN_VALUE;
		}

		return licencia_permisoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", fechainicio=");
		sb.append(getFechainicio());
		sb.append(", fechafin=");
		sb.append(getFechafin());
		sb.append(", usuariofk=");
		sb.append(getUsuariofk());
		sb.append(", tipofk=");
		sb.append(getTipofk());
		sb.append(", actoadmin=");
		sb.append(getActoadmin());
		sb.append(", creadoPor=");
		sb.append(getCreadoPor());
		sb.append(", modificadoPor=");
		sb.append(getModificadoPor());
		sb.append(", estatus=");
		sb.append(getEstatus());
		sb.append(", despacho=");
		sb.append(getDespacho());
		sb.append(", cargo=");
		sb.append(getCargo());
		sb.append(", horas=");
		sb.append(getHoras());
		sb.append(", minutos=");
		sb.append(getMinutos());
		sb.append(", fechaRegistro=");
		sb.append(getFechaRegistro());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("co.com.csj.model.licencia_permiso");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechainicio</column-name><column-value><![CDATA[");
		sb.append(getFechainicio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechafin</column-name><column-value><![CDATA[");
		sb.append(getFechafin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usuariofk</column-name><column-value><![CDATA[");
		sb.append(getUsuariofk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipofk</column-name><column-value><![CDATA[");
		sb.append(getTipofk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actoadmin</column-name><column-value><![CDATA[");
		sb.append(getActoadmin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creadoPor</column-name><column-value><![CDATA[");
		sb.append(getCreadoPor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modificadoPor</column-name><column-value><![CDATA[");
		sb.append(getModificadoPor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estatus</column-name><column-value><![CDATA[");
		sb.append(getEstatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>despacho</column-name><column-value><![CDATA[");
		sb.append(getDespacho());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cargo</column-name><column-value><![CDATA[");
		sb.append(getCargo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>horas</column-name><column-value><![CDATA[");
		sb.append(getHoras());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>minutos</column-name><column-value><![CDATA[");
		sb.append(getMinutos());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaRegistro</column-name><column-value><![CDATA[");
		sb.append(getFechaRegistro());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = licencia_permiso.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			licencia_permiso.class
		};
	private long _id;
	private Date _fechainicio;
	private Date _fechafin;
	private String _usuariofk;
	private String _originalUsuariofk;
	private long _tipofk;
	private long _originalTipofk;
	private boolean _setOriginalTipofk;
	private String _actoadmin;
	private long _creadoPor;
	private long _originalCreadoPor;
	private boolean _setOriginalCreadoPor;
	private long _modificadoPor;
	private int _estatus;
	private int _originalEstatus;
	private boolean _setOriginalEstatus;
	private String _despacho;
	private String _originalDespacho;
	private int _cargo;
	private int _horas;
	private int _minutos;
	private Date _fechaRegistro;
	private long _columnBitmask;
	private licencia_permiso _escapedModelProxy;
}